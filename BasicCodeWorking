#include <WiFi.h>
#include <ESPAsyncWebServer.h>
#include <DHT.h>

const char* ssid = "your_wifi_ssid";
const char* password = "your_wifi_password";

AsyncWebServer server(80);

#define DHTTYPE DHT11

const int DHTPin1 = 15; // DHT11 in kitchen
const int DHTPin2 = 4;  // DHT11 in bathroom

const int kitchenLightPin = 16;
const int exhaustFanPin = 17;
const int hallLightPin = 18;
const int tvPin = 19;
const int bathroomLightPin = 21;
const int bedroomLightPin = 22;
const int bedroomSwitchPin = 23;

DHT dht1(DHTPin1, DHTTYPE);
DHT dht2(DHTPin2, DHTTYPE);

void setup() {
  Serial.begin(115200);

  pinMode(kitchenLightPin, OUTPUT);
  pinMode(exhaustFanPin, OUTPUT);
  pinMode(hallLightPin, OUTPUT);
  pinMode(tvPin, OUTPUT);
  pinMode(bathroomLightPin, OUTPUT);
  pinMode(bedroomLightPin, OUTPUT);
  pinMode(bedroomSwitchPin, OUTPUT);

  dht1.begin();
  dht2.begin();

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  server.on("/", HTTP_GET, handleRoot);
  server.on("/toggle", HTTP_GET, handleToggle);
  server.on("/status", HTTP_GET, handleStatus);

  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();
}

void handleRoot(AsyncWebServerRequest *request) {
  String html = "<!DOCTYPE html><html><head><title>Smart Home Dashboard</title>";
  html += "<style>body { font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 0; }";
  html += "h1 { text-align: center; margin-top: 20px; } .container { background-color: #fff; border: 1px solid #ddd; border-radius: 5px; margin: 20px auto; padding: 20px; max-width: 600px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); }";
  html += "h2 { margin-top: 0; } button { display: inline-block; padding: 10px 20px; margin: 5px 0; border: none; border-radius: 5px; background-color: #007bff; color: #fff; cursor: pointer; font-size: 16px; }";
  html += "button:hover { background-color: #0056b3; }</style></head><body>";
  html += "<h1>Smart Home Dashboard</h1>";
  html += "<div class=\"container\">";
  html += "<h2>Kitchen</h2>";
  html += "<button onclick=\"toggleDevice('kitchenLight')\">Toggle Light</button>";
  html += "<button onclick=\"toggleDevice('exhaustFan')\">Toggle Exhaust Fan</button>";
  html += "<p>Temperature: <span id=\"kitchenTemp\">0</span>°C</p>";
  html += "<p>Humidity: <span id=\"kitchenHumidity\">0</span>%</p>";
  html += "</div>";
  html += "<div class=\"container\">";
  html += "<h2>Hall</h2>";
  html += "<button onclick=\"toggleDevice('hallLight')\">Toggle Light</button>";
  html += "<button onclick=\"toggleDevice('tv')\">Toggle TV</button>";
  html += "</div>";
  html += "<div class=\"container\">";
  html += "<h2>Bathroom</h2>";
  html += "<button onclick=\"toggleDevice('bathroomLight')\">Toggle Light</button>";
  html += "<p>Temperature: <span id=\"bathroomTemp\">0</span>°C</p>";
  html += "<p>Humidity: <span id=\"bathroomHumidity\">0</span>%</p>";
  html += "</div>";
  html += "<div class=\"container\">";
  html += "<h2>Bedroom</h2>";
  html += "<button onclick=\"toggleDevice('bedroomLight')\">Toggle Light</button>";
  html += "<button onclick=\"toggleDevice('bedroomSwitch')\">Toggle Switch</button>";
  html += "</div>";
  html += "<script>function toggleDevice(device) { var xhttp = new XMLHttpRequest(); xhttp.open('GET', '/toggle?device=' + device, true); xhttp.send(); }</script>";
  html += "</body></html>";

  request->send(200, "text/html", html);
}

void handleToggle(AsyncWebServerRequest *request) {
  String device = request->arg("device");
  if (device == "kitchenLight") {
    digitalWrite(kitchenLightPin, !digitalRead(kitchenLightPin));
  } else if (device == "exhaustFan") {
    digitalWrite(exhaustFanPin, !digitalRead(exhaustFanPin));
  } else if (device == "hallLight") {
    digitalWrite(hallLightPin, !digitalRead(hallLightPin));
  } else if (device == "tv") {
    digitalWrite(tvPin, !digitalRead(tvPin));
  } else if (device == "bathroomLight") {
    digitalWrite(bathroomLightPin, !digitalRead(bathroomLightPin));
  } else if (device == "bedroomLight") {
    digitalWrite(bedroomLightPin, !digitalRead(bedroomLightPin));
  } else if (device == "bedroomSwitch") {
    digitalWrite(bedroomSwitchPin, !digitalRead(bedroomSwitchPin));
  }

  request->send(200, "text/plain", "OK");
}

void handleStatus(AsyncWebServerRequest *request) {
  String json = "{";
  json += "\"kitchenLight\":" + String(digitalRead(kitchenLightPin)) + ",";
  json += "\"exhaustFan\":" + String(digitalRead(exhaustFanPin)) + ",";
  json += "\"hallLight\":" + String(digitalRead(hallLightPin)) + ",";
  json += "\"tv\":" + String(digitalRead(tvPin)) + ",";
  json += "\"bathroomLight\":" + String(digitalRead(bathroomLightPin)) + ",";
  json += "\"bedroomLight\":" + String(digitalRead(bedroomLightPin)) + ",";
  json += "\"bedroomSwitch\":" + String(digitalRead(bedroomSwitchPin));
  json += "}";

  request->send(200, "application/json", json);
}
